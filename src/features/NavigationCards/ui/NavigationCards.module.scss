@use "sass:map";
@use "@@/public/styles/utils/colors" as *;
@use "@@/public/styles/utils/breakpoints" as *;

.root {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 8px;

  @media screen and (max-width: map.get($breakpoints, "md")) {
    grid-template-columns: repeat(2, 1fr);
  }
}

.cardItem {
  display: flex;
  flex-direction: column;
  justify-content: space-between;

  border-radius: 6px;
  padding: 20px;
  background: $default-card-bg;
  width: 249px;
  height: 280px;
  overflow: hidden;
  z-index: 1;

  position: relative;
  &::before {
    content: "";
    position: absolute;
    inset: 0;
    background-image: url("../../../../public/images/background-category.webp");
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    object-fit: cover;
    transform: translate(0, 10px) rotate(15deg) scale(1.5);
    opacity: 0;
    transition: all 0.3s ease-in-out;
    pointer-events: none;
    z-index: -1;
    background-color: $default-card-bg-dark;
  }

  &:hover::before {
    opacity: 1;
    animation: hoverBg 1.2s forwards;
    animation-delay: 0.1s;
  }

  &:hover .description {
    animation-delay: 0.5s;
    opacity: 1;
    animation: hoverContent 1s forwards;
  }
  &:hover .cardHeader {
    animation-delay: 0.5s;
    animation: hoverContent 1s forwards;
  }

  @media screen and (max-width: map.get($breakpoints, "md")) {
    width: auto;
    height: 150px;
    padding: 15px;
  }
}

@keyframes hoverBg {
  to {
    transform: translate(10px, -5px) rotate(15deg) scale(1.5);
  }
}

.iconStyle {
  height: 26px;
  width: 26px;
}

.titleStyle {
  font-weight: 600;
}

.cardHeader {
  height: 40px;
  transition: opacity 0.1s ease-in-out;
}

.description {
  margin-top: 10px;
  height: 100%;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.additionalIconStyle {
  width: 115px;
  height: 40px;
}

.additionalMenuCardsWrapper {
  display: flex;
  gap: 8px;

  @media screen and (max-width: map.get($breakpoints, "md")) {
    flex-direction: column;
  }
}

.contactToUsCard {
  width: calc(100% - 249px);
  height: 160px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background: $default-card-bg;
  transition: filter 1s ease-in-out;
  position: relative;
  z-index: 1;

  @media screen and (max-width: map.get($breakpoints, "md")) {
    width: auto;
    justify-content: initial;
    gap: 15px;
    height: auto;
  }

  &:before {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(
      50deg,
      $color-pale-lime 10%,
      $color-light-coral 40%,
      $color-cornflower-blue
    );
    opacity: 0;
    z-index: -1;
    transition: opacity 0.5s ease-in-out;
    border-radius: inherit;
    filter: grayscale(55%);
  }

  &:hover:before {
    opacity: 1;
  }

  &:hover .cardHeader {
    animation-delay: 0.5s;
    animation: hoverContent 1s forwards;
  }
}

.contactDescription {
  width: 476px;
  @media screen and (max-width: map.get($breakpoints, "md")) {
    width: auto;
  }
}

.postVacancy {
  background-color: $color-font-normal;
  width: 249px;
  height: 160px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: relative;
  z-index: 1;

  @media screen and (max-width: map.get($breakpoints, "md")) {
    width: auto;
    height: auto;
    flex-direction: row-reverse;
    justify-content: space-between;
    align-items: center;
  }
  overflow: hidden;

  &:before {
    content: "";
    position: absolute;
    inset: 0;
    background: conic-gradient(
      $color-sky-blue 50deg,
      $color-raspberry 125deg 145deg,
      $color-pale-lime 350deg
    );
    filter: blur(30px);
    opacity: 0;
    z-index: -1;
    border-radius: inherit;
    transition: opacity 0.5s ease-in-out;
  }

  &:hover:before {
    opacity: 1;
  }
}

.badge {
  font-weight: 500;
  font-size: 14px;
  line-height: 16px;
  letter-spacing: -0.5px;
  padding: 4px 10px;
  border-radius: 12px;
  border: 1px solid $default-card-bg;
  color: $color-white;
}

.postVacansyTitle {
  color: $color-white;
}

.gradient-1 {
  background: linear-gradient(
    45deg,
    $color-light-coral 10%,
    $color-pale-lime 45%,
    $color-mint-green 70%
  );
  filter: grayscale(50%);
}

.gradient-2 {
  background: linear-gradient(45deg, $color-light-coral, $color-orchid, $color-lavender-blue);
  filter: grayscale(30%);
}

@keyframes hoverContent {
  to {
    transform: translateY(5px);
  }
}
